###############################################################################
#
# IAR C/C++ Compiler V6.10.2.50871/W32 for MSP430         21/Oct/2014  19:48:14
# Copyright 1996-2014 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 6.10
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        E:\Fall 14\ECE 306\WORKSPACE\SCHOOLPROJECT\PROJECT 05\ports.c
#    Command line  =  
#        "E:\Fall 14\ECE 306\WORKSPACE\SCHOOLPROJECT\PROJECT 05\ports.c" -lC
#        "E:\Fall 14\ECE 306\WORKSPACE\SCHOOLPROJECT\PROJECT 05\Debug\List\" -o
#        "E:\Fall 14\ECE 306\WORKSPACE\SCHOOLPROJECT\PROJECT 05\Debug\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR5739__ -e --double=32 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.0\430\lib\dlib\dl430xlsfn.h"
#        --core=430X --data_model=small -Ol --multiplier=32
#        --multiplier_location=4C0 --hw_workaround=CPU40 --hw_workaround=CPU39
#        --code_model=large
#    List file     =  
#        E:\Fall 14\ECE 306\WORKSPACE\SCHOOLPROJECT\PROJECT
#        05\Debug\List\ports.lst
#    Object file   =  
#        E:\Fall 14\ECE 306\WORKSPACE\SCHOOLPROJECT\PROJECT
#        05\Debug\Obj\ports.r43
#
###############################################################################

E:\Fall 14\ECE 306\WORKSPACE\SCHOOLPROJECT\PROJECT 05\ports.c
      1          //------------------------------------------------------------------------------
      2          //  File Name : ports.c 
      3          //
      4          //  Description: This file contains the Port related Initializations
      5          //
      6          //  Mattia Muller
      7          //  Sep 2014
      8          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (5.40.1)
      9          //------------------------------------------------------------------------------
     10          
     11          
     12          #include "macros.h"
     13          #include "msp430.h"

   \                                 In  segment DATA16_AN, at 0x202
   \   union <unnamed> _A_PAOUT_L
   \                     _A_PAOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x204
   \   union <unnamed> _A_PADIR_L
   \                     _A_PADIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x206
   \   union <unnamed> _A_PAREN_L
   \                     _A_PAREN_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20a
   \   union <unnamed> _A_PASEL0_L
   \                     _A_PASEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20c
   \   union <unnamed> _A_PASEL1_L
   \                     _A_PASEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x222
   \   union <unnamed> _A_PBOUT_L
   \                     _A_PBOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x224
   \   union <unnamed> _A_PBDIR_L
   \                     _A_PBDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x226
   \   union <unnamed> _A_PBREN_L
   \                     _A_PBREN_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x22a
   \   union <unnamed> _A_PBSEL0_L
   \                     _A_PBSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x22c
   \   union <unnamed> _A_PBSEL1_L
   \                     _A_PBSEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x23a
   \   union <unnamed> _A_PBIE_L
   \                     _A_PBIE_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x322
   \   union <unnamed> _A_PJOUT_L
   \                     _A_PJOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x324
   \   union <unnamed> _A_PJDIR_L
   \                     _A_PJDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x32a
   \   union <unnamed> _A_PJSEL0_L
   \                     _A_PJSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x32c
   \   union <unnamed> _A_PJSEL1_L
   \                     _A_PJSEL1_L:
   \   000000                DS8 2
     14          
     15          //=========================================================================== 
     16          // Init_Port1
     17          // Purpose: Initialize Port 1
     18          //
     19          // Various options for Pin 0
     20          // SEL0 SEL1 	DIR
     21          // 0  	0		I:0		- *General-purpose digital I/O with port interrupt and wake up from LPMx.5
     22          // 0	1		0		- TA0 CCR1 capture: CCI1A input
     23          // 0	1		1		- TA0 CCR1 compare: Out1
     24          // 1	0		0		- External DMA trigger
     25          // 1	0		1		- RTC clock calibration output
     26          // 1	1		X		- Analog input A0 - ADC, Comparator_D input CD0, Vref- External applied reference
     27          // 
     28          // Various options for Pin 1
     29          // SEL0 SEL1 	DIR
     30          // 0  	0		I:0		- *General-purpose digital I/O with port interrupt and wake up from LPMx.5
     31          // 0	1		0		- TA0 CCR1 capture: CCI1A input
     32          // 0	1		1		- TA0 CCR1 compare: Out1
     33          // 1	0		0		- External DMA trigger
     34          // 1	0		1		- RTC clock calibration output
     35          // 1	1		X		- Analog input A0 - ADC, Comparator_D input CD1, Vref- External applied reference
     36          // 
     37          // Various options for Pin 2
     38          // SEL0 SEL1 	DIR
     39          // 0  	0		I:0		- *General-purpose digital I/O with port interrupt and wake up from LPMx.5
     40          // 0	1		0		- TA0 CCR1 capture: CCI1A input
     41          // 0	1		1		- TA0 CCR1 compare: Out1
     42          // 1	0		0		- External DMA trigger
     43          // 1	0		1		- RTC clock calibration output
     44          // 1	1		X		- Analog input A2 - ADC, Comparator_D input CD2
     45          //
     46          // Various options for Pin 3
     47          // SEL0 SEL1 	DIR
     48          // 0  	0		I:0		- *General-purpose digital I/O with port interrupt and wake up from LPMx.5
     49          // 0	1		0		- TA0 CCR1 capture: CCI1A input
     50          // 0	1		1		- TA0 CCR1 compare: Out1
     51          // 1	0		0		- External DMA trigger
     52          // 1	0		X		- Slave transmit enable - eUSCI_B0 SPI mode
     53          // 1	1		X		- Analog input A3 - ADC, Comparator_D input CD3
     54          //
     55          // Various options for Pin 4
     56          // SEL0 SEL1 	DIR
     57          // 0  	0		I:0		- *General-purpose digital I/O with port interrupt and wake up from LPMx.5
     58          // 0	1		0		- TA0 CCR1 capture: CCI1A input
     59          // 0	1		1		- TA0 CCR1 compare: Out1
     60          // 1	0		0		- External DMA trigger
     61          // 1	0		X		- Slave transmit enable - eUSCI_A0 SPI mode
     62          // 1	1		X		- Analog input A4 - ADC, Comparator_D input CD4 
     63          //
     64          // Various options for Pin 5
     65          // SEL0 SEL1 	DIR
     66          // 0  	0		I:0		- *General-purpose digital I/O with port interrupt and wake up from LPMx.5
     67          // 0	1		0		- TA0 CCR1 capture: CCI1A input
     68          // 0	1		1		- TA0 CCR1 compare: Out1
     69          // 1	0		0		- External DMA trigger
     70          // 1	0		X		- Clock signal input - eUSCI_A0 SPI slave, Clock signal output - eUSCI_A0 SPI master
     71          // 1	1		X		- Analog input A5 - ADC, Comparator_D input CD5
     72          //
     73          // Various options for Pin 6
     74          // SEL0 SEL1 	DIR
     75          // 0  	0		I:0		- *General-purpose digital I/O with port interrupt and wake up from LPMx.5
     76          // 0	1		0		- TA0 CCR1 capture: CCI1A input
     77          // 0	1		1		- TA0 CCR1 compare: Out1
     78          // 1	0		X		- *Slave in, master out - eUSCI_B0 SPI mode, I2C data - eUSCI_B0 I2C mode
     79          // 1	0		1		- TA0 CCR0 capture: CCI0A input
     80          // 1	1		1		- TA0 CCR0 compare: Out0
     81          //
     82          // Various options for Pin 7
     83          // SEL0 SEL1 	DIR
     84          // 0  	0		I:0		- *General-purpose digital I/O with port interrupt and wake up from LPMx.5
     85          // 0	1		0		- TA0 CCR1 capture: CCI1A input
     86          // 0	1		1		- TA0 CCR1 compare: Out1
     87          // 1	0		X		- Slave out, master in - eUSCI_B0 SPI mode, I2C clock - eUSCI_B0 I2C mode
     88          // 1	0		1		- TA1 CCR0 capture: CCI0A input
     89          // 1	1		1		- TA1 CCR0 compare: Out0
     90          //
     91          // Passed: No variables passed
     92          // Locals: No local variables
     93          // Returned: No values returned
     94          //
     95          // Author: Mattia Muller
     96          // Date: Sept 2013
     97          // Compiler: Built with IAR Embedded Workbench Version: V4.10A/W32 (5.40.1)
     98          // Version: 1.0 
     99          //-----------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
    100          void Init_Port1(void){ 
   \                     Init_Port1:
    101           P1SEL0 = SET_0; // P1 set as I/0
   \   000000   C2430A02     MOV.B   #0x0, &0x20a
    102           P1SEL1 = SET_0; // P1 set as I/0
   \   000004   C2430C02     MOV.B   #0x0, &0x20c
    103           P1DIR = SET_0; // Set P1 direction to input
   \   000008   C2430402     MOV.B   #0x0, &0x204
    104           P1SEL0 &= ~SPI_SIMO; // 0 SIMO_B selected
   \   00000C   F2C040000A02 BIC.B   #0x40, &0x20a
    105           P1SEL1 |= SPI_SIMO; // 1 SIMO_B selected
   \   000012   F2D040000C02 BIS.B   #0x40, &0x20c
    106          // P1SEL0 &= ~SOMI_B; // 0 SOMI_B is unused on the LCD
    107          // P1SEL1 |= SOMI_B; // 1 SOMI_B is unused on the LCD
    108           P1SEL0 |= V_DETECT_R; // 1 V_DETECT_R selected
   \   000018   D2D30A02     BIS.B   #0x1, &0x20a
    109           P1SEL1 |= V_DETECT_R; // 1 V_DETECT_R selected
   \   00001C   D2D30C02     BIS.B   #0x1, &0x20c
    110           P1SEL0 |= V_DETECT_L; // 1 V_DETECT_L selected
   \   000020   E2D30A02     BIS.B   #0x2, &0x20a
    111           P1SEL1 |= V_DETECT_L; // 1 V_DETECT_L selected
   \   000024   E2D30C02     BIS.B   #0x2, &0x20c
    112           P1SEL0 |= V_THUMB; // 1 V_THUMB selected
   \   000028   F2D20A02     BIS.B   #0x8, &0x20a
    113           P1SEL1 |= V_THUMB; // 1 V_THUMB selected
   \   00002C   F2D20C02     BIS.B   #0x8, &0x20c
    114           P1DIR  &= ~(V_DETECT_R | V_DETECT_L | V_THUMB);
   \   000030   F2F0F4000402 AND.B   #0xf4, &0x204
    115           P1SEL0 &= ~IR_LED;
   \   000036   E2C20A02     BIC.B   #0x4, &0x20a
    116           P1SEL1 &= ~IR_LED;
   \   00003A   E2C20C02     BIC.B   #0x4, &0x20c
    117           P1DIR  |= IR_LED;
   \   00003E   E2D20402     BIS.B   #0x4, &0x204
    118          // P1DIR &= ~SOMI_B; // SOMI_B is unused on the LCD
    119           P1DIR |= SPI_SIMO; // 1 SIMO_B set to Output
   \   000042   F2D040000402 BIS.B   #0x40, &0x204
    120           P1OUT &= ~RESET_LCD; // 0 P1 SPI_CS_LCD Port Pin set low
   \   000048   F2C020000202 BIC.B   #0x20, &0x202
    121           P1DIR |= RESET_LCD; // 1 Set RESET_LCD output direction
   \   00004E   F2D020000402 BIS.B   #0x20, &0x204
    122           P1OUT |= SPI_CS_LCD; // 1 P1 SPI_CS_LCD Port Pin set high
   \   000054   F2D010000202 BIS.B   #0x10, &0x202
    123           P1DIR |= SPI_CS_LCD; // 1 Set SPI_CS_LCD output direction
   \   00005A   F2D010000402 BIS.B   #0x10, &0x204
    124           P1OUT |= RS_LCD; // 1 P1 RS_LCD Port Pin set high
   \   000060   F2D080000202 BIS.B   #0x80, &0x202
    125           P1DIR |= RS_LCD; // 1 Set RS_LCD output direction
   \   000066   F2D080000402 BIS.B   #0x80, &0x204
    126           P1OUT &= ~IR_LED; // 0 P1 IR_LED Port Pin set low
   \   00006C   E2C20202     BIC.B   #0x4, &0x202
    127           P1REN |= SPI_SIMO; // 1 Enable pullup resistor
   \   000070   F2D040000602 BIS.B   #0x40, &0x206
    128           P1REN |= RS_LCD; // 1 Enable pullup resistor
   \   000076   F2D080000602 BIS.B   #0x80, &0x206
    129           P1REN |= RESET_LCD; // 1 Enable pullup resistor
   \   00007C   F2D020000602 BIS.B   #0x20, &0x206
    130           P1REN |= SPI_CS_LCD; // 1 Enable pullup resistor
   \   000082   F2D010000602 BIS.B   #0x10, &0x206
    131          }
   \   000088   1001         RETA
   \   00008A                REQUIRE _A_PASEL0_L
   \   00008A                REQUIRE _A_PASEL1_L
   \   00008A                REQUIRE _A_PADIR_L
   \   00008A                REQUIRE _A_PAOUT_L
   \   00008A                REQUIRE _A_PAREN_L
    132          //------------------------------------------------------------------------------
    133          
    134          //=========================================================================== 
    135          // Init_Port2
    136          // Purpose: Initialize Port 2
    137          //
    138          // Various options for Pin 0
    139          // SEL0 SEL1 	DIR
    140          // 0  	0		I:0		- *General-purpose digital I/O
    141          // 0	1		X		- UCA0TXD/UCA0SIMO
    142          // 1	0		0		- TB2.CCI0A 
    143          // 1	0		1		- TB2.0 
    144          // 1	1		0		- TB0CLK
    145          // 1	1		1		- ACLK
    146          // 
    147          // Various options for Pin 1
    148          // SEL0 SEL1 	DIR
    149          // 0  	0		I:0		- *General-purpose digital I/O
    150          // 0	1		X		- UCA0RXD/UCA0SOMI
    151          // 1	0		0		- TB2.CCI1A
    152          // 1	0		1		- TB2.1
    153          // 1	1		0		- TB0.CCI0A
    154          // 1	1		1		- TB0.0
    155          // 
    156          // Various options for Pin 2
    157          // SEL0 SEL1 	DIR
    158          // 0  	0		I:0		- *General-purpose digital I/O
    159          // 0	1		X		- UCB0CLK
    160          // 1	0		0		- TB2.CCI2A
    161          // 1	0		1		- TB2.2 
    162          // 1	1		0		- TB1.CCI0A
    163          // 1	1		1		- TB1.0 
    164          //
    165          // Various options for Pin 3
    166          // SEL0 SEL1 	DIR
    167          // 0  	0		I:0		- *General-purpose digital I/O
    168          // 0	1		X		- UCA1STE
    169          // 1	0		0		- TA0.CCI0B
    170          // 1	0		1		- TA0.0
    171          // 1	1		X		- Analog input A6 - ADC, Comparator_D input CD10
    172          //
    173          // Various options for Pin 4
    174          // SEL0 SEL1 	DIR
    175          // 0  	0		I:0		- *General-purpose digital I/O
    176          // 0	1		X		- UCA1CLK
    177          // 1	0		0		- TA1.CCI0B
    178          // 1	0		1		- TA1.0
    179          // 1	1		X		- Analog input A7 - ADC, Comparator_D input CD11
    180          //
    181          // Various options for Pin 5
    182          // SEL0 SEL1 	DIR
    183          // 0  	0		I:0		- *General-purpose digital I/O
    184          // 0	1		X		- UCA1TXD/UCA1SIMO
    185          // 1	0		0		- TB0.CCI0B
    186          // 1	0		1		- TB0.0
    187          //
    188          // Various options for Pin 6
    189          // SEL0 SEL1 	DIR
    190          // 0  	0		I:0		- *General-purpose digital I/O
    191          // 0	1		X		- UCA1TXD/UCA1SIMO
    192          // 1	0		0		- TB0.CCI0B
    193          // 1	0		1		- TB0.0
    194          //
    195          // Various options for Pin 7
    196          // SEL0 SEL1 	DIR
    197          // 0  	0		I:0		- *General-purpose digital I/O
    198          //
    199          // Passed: No variables passed
    200          // Locals: No local variables
    201          // Returned: No values returned
    202          //
    203          // Author: Mattia Muller
    204          // Date: Sept 2013
    205          // Compiler: Built with IAR Embedded Workbench Version: V4.10A/W32 (5.40.1)
    206          // Version: 1.0 
    207          //-----------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
    208          void Init_Port2(void) { 
   \                     Init_Port2:
    209          
    210              P2SEL0 = SET_0; // P2 set as I/0
   \   000000   C2430B02     MOV.B   #0x0, &0x20b
    211              P2SEL1 = SET_0; // P2 set as I/0
   \   000004   C2430D02     MOV.B   #0x0, &0x20d
    212              P2DIR = SET_0;  // P2 set as input
   \   000008   C2430502     MOV.B   #0x0, &0x205
    213              P2OUT = SET_0;  // P2 initialized as low
   \   00000C   C2430302     MOV.B   #0x0, &0x203
    214            
    215              P2SEL0 &= ~(USB_TXD | USB_RXD | SPI_SCK | CPU_TXD | CPU_RXD); // Set specified pins as function
   \   000010   F2F098000B02 AND.B   #0x98, &0x20b
    216              P2SEL1 |= (USB_TXD | USB_RXD | SPI_SCK | CPU_TXD | CPU_RXD); // Set specified pins as function
   \   000016   F2D067000D02 BIS.B   #0x67, &0x20d
    217              P2OUT |= SPI_SCK; // SPI_SCK Port Pin set high
   \   00001C   E2D20302     BIS.B   #0x4, &0x203
    218              P2REN |= SPI_SCK; // Enable pullup resistor
   \   000020   E2D20702     BIS.B   #0x4, &0x207
    219          }
   \   000024   1001         RETA
   \   000026                REQUIRE _A_PASEL0_L
   \   000026                REQUIRE _A_PASEL1_L
   \   000026                REQUIRE _A_PADIR_L
   \   000026                REQUIRE _A_PAOUT_L
   \   000026                REQUIRE _A_PAREN_L
    220          //------------------------------------------------------------------------------
    221          
    222          //=========================================================================== 
    223          // Init_Port3
    224          // Purpose: Initialize Port 3
    225          //
    226          // Various options for Pin 0
    227          // SEL0 SEL1 	DIR
    228          // 0  	0		I:0		- *General-purpose digital I/O
    229          // 1	1		X		- Analog input A12 - ADC, Comparator_D input CD12
    230          // 
    231          // Various options for Pin 1
    232          // SEL0 SEL1 	DIR
    233          // 0  	0		I:0		- *General-purpose digital I/O
    234          // 1	1		X		- Analog input A13 - ADC, Comparator_D input CD13
    235          // 
    236          // Various options for Pin 2
    237          // SEL0 SEL1 	DIR
    238          // 0  	0		I:0		- *General-purpose digital I/O
    239          // 1	1		X		- Analog input A14 - ADC, Comparator_D input CD14
    240          // 
    241          // Various options for Pin 3
    242          // SEL0 SEL1 	DIR
    243          // 0  	0		I:0		- *General-purpose digital I/O
    244          // 1	1		X		- Analog input A15 - ADC, Comparator_D input CD15
    245          // 
    246          // Various options for Pin 4
    247          // SEL0 SEL1 	DIR
    248          // 0  	0		I:0		- *General-purpose digital I/O
    249          // 1	0		0		- TB1.CCI1B
    250          // 1	0		1		- TB1.1
    251          // 1	1		0		- TB2CLK
    252          // 1	1		1		- SMCLK
    253          //
    254          // Various options for Pin 5
    255          // SEL0 SEL1 	DIR
    256          // 0  	0		I:0		- *General-purpose digital I/O
    257          // 1	0		0		- TB1.CCI2B
    258          // 1	0		1		- TB1.2
    259          // 1	1		1		- CDOUT
    260          //
    261          // Various options for Pin 6
    262          // SEL0 SEL1 	DIR
    263          // 0  	0		I:0		- *General-purpose digital I/O
    264          // 1	0		0		- TB2.CCI2B
    265          // 1	0		1		- TB2.1
    266          // 1	1		0		- TB1CLK
    267          //
    268          // Various options for Pin 7
    269          // SEL0 SEL1 	DIR
    270          // 0  	0		I:0		- *General-purpose digital I/O
    271          // 1	0		0		- TB2.CCI2B
    272          // 1	0		1		- TB2.2
    273          //
    274          // Passed: clock_state is passed for future purposes
    275          // Locals: No local variables
    276          // Returned: No values returned
    277          //
    278          // Author: Mattia Muller
    279          // Date: Sept 2013
    280          // Compiler: Built with IAR Embedded Workbench Version: V4.10A/W32 (5.40.1)
    281          // Version: 1.0 
    282          //-----------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
    283          void Init_Port3(char clock_state) { //This function will initialize all pins in port 3.
   \                     Init_Port3:
    284          
    285              P3SEL0 = SET_0; // P3 set as I/0
   \   000000   C2432A02     MOV.B   #0x0, &0x22a
    286              P3SEL1 = SET_0; // P3 set as I/0
   \   000004   C2432C02     MOV.B   #0x0, &0x22c
    287              P3DIR = SET_0;  // P3 set as input
   \   000008   C2432402     MOV.B   #0x0, &0x224
    288              P3OUT = SET_0;  // P3 initialized as low
   \   00000C   C2432202     MOV.B   #0x0, &0x222
    289            
    290              P3DIR |= (R_FORWARD | L_FORWARD | TEST_PROBE | R_REVERSE | L_REVERSE); // Set specified pins as outputs
   \   000010   F2D0F8002402 BIS.B   #0xf8, &0x224
    291              P3DIR &= ~(X | Y | Z ); // Set specified pins as inputs
   \   000016   F2F0FC002402 AND.B   #0xfc, &0x224
    292              P3SEL0 &= ~(X | Y | Z | R_FORWARD | L_FORWARD | TEST_PROBE | R_REVERSE | L_REVERSE); // Set specified pins as GP I/O
   \   00001C   E2F22A02     AND.B   #0x4, &0x22a
    293              P3SEL1 &= ~(X | Y | Z | R_FORWARD | L_FORWARD | TEST_PROBE | R_REVERSE | L_REVERSE); // Set specified pins as GP I/O
   \   000020   E2F22C02     AND.B   #0x4, &0x22c
    294              P3OUT &= ~(X | Y | Z | R_FORWARD | L_FORWARD | TEST_PROBE | R_REVERSE | L_REVERSE); // Set specified pins to low
   \   000024   E2F22202     AND.B   #0x4, &0x222
    295              
    296              
    297          }
   \   000028   1001         RETA
   \   00002A                REQUIRE _A_PBSEL0_L
   \   00002A                REQUIRE _A_PBSEL1_L
   \   00002A                REQUIRE _A_PBDIR_L
   \   00002A                REQUIRE _A_PBOUT_L
    298          //------------------------------------------------------------------------------
    299          
    300          
    301          
    302          //=========================================================================== 
    303          // Init_Port4
    304          // Purpose: Initialize Port 4
    305          //
    306          // Various options for Pin 0
    307          // SEL0 SEL1 	DIR
    308          // 0  	0		I:0		- *General-purpose digital I/O
    309          // 1	0		0		- TB2.CCI0B
    310          // 1	0		1		- TB2.0
    311          // 
    312          // Various options for Pin 1
    313          // SEL0 SEL1 	DIR
    314          // 0  	0		I:0		- *General-purpose digital I/O
    315          //
    316          //
    317          // Passed: No local variables
    318          // Locals: No local variables
    319          // Returned: No values returned
    320          //
    321          // Author: Mattia Muller
    322          // Date: Sept 2013
    323          // Compiler: Built with IAR Embedded Workbench Version: V4.10A/W32 (5.40.1)
    324          // Version: 1.0 
    325          //-----------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
    326          void Init_Port4(void){
   \                     Init_Port4:
    327             P4SEL0 = SET_0; // P4 set as I/0
   \   000000   C2432B02     MOV.B   #0x0, &0x22b
    328             P4SEL1 = SET_0; // P4 set as I/0
   \   000004   C2432D02     MOV.B   #0x0, &0x22d
    329             P4DIR = SET_0; // Set P4 direction to input
   \   000008   C2432502     MOV.B   #0x0, &0x225
    330             P4DIR &= ~(SW1 | SW2); // Direction = input
   \   00000C   F2F0FC002502 AND.B   #0xfc, &0x225
    331             P4OUT = SET_0; // Set specified pins to high
   \   000012   C2432302     MOV.B   #0x0, &0x223
    332             P4OUT |= SW1 | SW2; // Configure pullup resistor
   \   000016   F2D003002302 BIS.B   #0x3, &0x223
    333             P4REN |= SW1 | SW2; // Enable pullup resistor
   \   00001C   F2D003002702 BIS.B   #0x3, &0x227
    334             P4IE |= SW1 | SW2; // P4.0 Hi/Lo edge interrupt
   \   000022   F2D003003B02 BIS.B   #0x3, &0x23b
    335          }
   \   000028   1001         RETA
   \   00002A                REQUIRE _A_PBSEL0_L
   \   00002A                REQUIRE _A_PBSEL1_L
   \   00002A                REQUIRE _A_PBDIR_L
   \   00002A                REQUIRE _A_PBOUT_L
   \   00002A                REQUIRE _A_PBREN_L
   \   00002A                REQUIRE _A_PBIE_L
    336          //----------------------------------------------------------------
    337          
    338          //=========================================================================== 
    339          // Init_PortJ
    340          // Purpose: Initialize Port J
    341          //
    342          // Various options for Pin 0
    343          // SEL0 SEL1 	DIR
    344          // 0  	0		I:0		- *General-purpose digital I/O
    345          // 1	0		0		- TB0OUTH
    346          // 1	0		1		- SMCLK
    347          // 1	1		X		- CD6
    348          // X	X		X		- TDO
    349          // 
    350          // Various options for Pin 1
    351          // SEL0 SEL1 	DIR
    352          // 0  	0		I:0		- *General-purpose digital I/O
    353          // 1	0		0		- TB1OUTH
    354          // 1	0		1		- MCLK
    355          // 1	1		X		- CD7
    356          // X	X		X		- TDI/TCLK
    357          //
    358          // Various options for Pin 2
    359          // SEL0 SEL1 	DIR
    360          // 0  	0		I:0		- *General-purpose digital I/O
    361          // 1	0		0		- TB2OUTH
    362          // 1	0		1		- ACLK
    363          // 1	1		X		- CD8
    364          // X	X		X		- TMS
    365          //
    366          // Various options for Pin 3
    367          // SEL0 SEL1 	DIR
    368          // 0  	0		I:0		- *General-purpose digital I/O
    369          // 1	1		X		- CD9
    370          // X	X		X		- TCK
    371          //
    372          // Various options for Pin 4
    373          // SEL1.5	SEL0.5 SEL1.4	SEL0.4	XT1	DIR
    374          // X		X		0		0		X	I:0		- *General-purpose digital I/O
    375          // X		X		0		1		0	X		- XIN crystal mode
    376          // X		X		0		1		1	X		- XIN bypass mode
    377          //
    378          // Various options for Pin 5
    379          // SEL1.5	SEL0.5 SEL1.4	SEL0.4	XT1	DIR
    380          // X		X		0		0		X	I:0		- *General-purpose digital I/O
    381          // X		X		0		1		0	X		- XOUT crystal mode
    382          // X		X		0		1		1	I:0		- General-purpose digital I/O
    383          //
    384          // Passed: No local variables
    385          // Locals: No local variables
    386          // Returned: No values returned
    387          //
    388          // Author: Mattia Muller
    389          // Date: Sept 2013
    390          // Compiler: Built with IAR Embedded Workbench Version: V4.10A/W32 (5.40.1)
    391          // Version: 1.0 
    392          //-----------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
    393          void Init_PortJ(void) { //This function will initialize all pins in port J
   \                     Init_PortJ:
    394          
    395              PJSEL0 = SET_0; // PJ set as I/0
   \   000000   82432A03     MOV.W   #0x0, &0x32a
    396              PJSEL1 = SET_0; // PJ set as I/0
   \   000004   82432C03     MOV.W   #0x0, &0x32c
    397              PJDIR = SET_0;  // PJ set as input
   \   000008   82432403     MOV.W   #0x0, &0x324
    398              PJOUT = SET_0;  // PJ initialized as low
   \   00000C   82432203     MOV.W   #0x0, &0x322
    399            
    400              PJDIR |= (GPS_PWR | GPS_RESET | GPS_PWRCNTL); // Set specified pins as output
   \   000010   B2D007002403 BIS.W   #0x7, &0x324
    401              PJDIR &= ~(GPS_PWRCHK); // Set specified pins as input
   \   000016   B2C22403     BIC.W   #0x8, &0x324
    402              PJSEL0 &= ~(GPS_PWR | GPS_RESET | GPS_PWRCNTL | GPS_PWRCHK); // Set specified pins as GP I/O
   \   00001A   B2F0F0FF2A03 AND.W   #0xfff0, &0x32a
    403              PJSEL1 &= ~(GPS_PWR | GPS_RESET | GPS_PWRCNTL | GPS_PWRCHK); // Set specified pins as GP I/O
   \   000020   B2F0F0FF2C03 AND.W   #0xfff0, &0x32c
    404              PJOUT &= ~(GPS_PWR | GPS_RESET | GPS_PWRCNTL | GPS_PWRCHK); // Set specified pins to 0
   \   000026   B2F0F0FF2203 AND.W   #0xfff0, &0x322
    405          }
   \   00002C   1001         RETA
   \   00002E                REQUIRE _A_PJSEL0_L
   \   00002E                REQUIRE _A_PJSEL1_L
   \   00002E                REQUIRE _A_PJDIR_L
   \   00002E                REQUIRE _A_PJOUT_L
    406          //----------------------------------------------------------------
    407          

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Init_Port1
      4   Init_Port2
      4   Init_Port3
      4   Init_Port4
      4   Init_PortJ


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
     138  Init_Port1
      38  Init_Port2
      42  Init_Port3
      42  Init_Port4
      46  Init_PortJ
       2  _A_PADIR_L
       2  _A_PAOUT_L
       2  _A_PAREN_L
       2  _A_PASEL0_L
       2  _A_PASEL1_L
       2  _A_PBDIR_L
       2  _A_PBIE_L
       2  _A_PBOUT_L
       2  _A_PBREN_L
       2  _A_PBSEL0_L
       2  _A_PBSEL1_L
       2  _A_PJDIR_L
       2  _A_PJOUT_L
       2  _A_PJSEL0_L
       2  _A_PJSEL1_L

 
 306 bytes in segment CODE
  30 bytes in segment DATA16_AN
 
 306 bytes of CODE memory
   0 bytes of DATA memory (+ 30 bytes shared)

Errors: none
Warnings: none
