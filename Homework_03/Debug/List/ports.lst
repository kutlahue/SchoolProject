###############################################################################
#
# IAR C/C++ Compiler V6.10.2.50871/W32 for MSP430         12/Sep/2014  00:28:16
# Copyright 1996-2014 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 6.10
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        \\VBOXSVR\ncsu\Fall 14\ECE
#        306\Workspace\SchoolProject\Homework_03\ports.c
#    Command line  =  
#        "\\VBOXSVR\ncsu\Fall 14\ECE
#        306\Workspace\SchoolProject\Homework_03\ports.c" -lC
#        "\\VBOXSVR\ncsu\Fall 14\ECE
#        306\Workspace\SchoolProject\Homework_03\Debug\List\" -o
#        "\\VBOXSVR\ncsu\Fall 14\ECE
#        306\Workspace\SchoolProject\Homework_03\Debug\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR5739__ -e --double=32 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.0\430\lib\dlib\dl430xlsfn.h"
#        --core=430X --data_model=small -Ol --multiplier=32
#        --multiplier_location=4C0 --hw_workaround=CPU40 --hw_workaround=CPU39
#        --code_model=large
#    List file     =  
#        \\VBOXSVR\ncsu\Fall 14\ECE
#        306\Workspace\SchoolProject\Homework_03\Debug\List\ports.lst
#    Object file   =  
#        \\VBOXSVR\ncsu\Fall 14\ECE
#        306\Workspace\SchoolProject\Homework_03\Debug\Obj\ports.r43
#
###############################################################################

\\VBOXSVR\ncsu\Fall 14\ECE 306\Workspace\SchoolProject\Homework_03\ports.c
      1          #include "macros.h"
      2          #include "msp430.h"

   \                                 In  segment DATA16_AN, at 0x202
   \   union <unnamed> _A_PAOUT_L
   \                     _A_PAOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x204
   \   union <unnamed> _A_PADIR_L
   \                     _A_PADIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x206
   \   union <unnamed> _A_PAREN_L
   \                     _A_PAREN_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20a
   \   union <unnamed> _A_PASEL0_L
   \                     _A_PASEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20c
   \   union <unnamed> _A_PASEL1_L
   \                     _A_PASEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x222
   \   union <unnamed> _A_PBOUT_L
   \                     _A_PBOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x224
   \   union <unnamed> _A_PBDIR_L
   \                     _A_PBDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x226
   \   union <unnamed> _A_PBREN_L
   \                     _A_PBREN_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x22a
   \   union <unnamed> _A_PBSEL0_L
   \                     _A_PBSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x22c
   \   union <unnamed> _A_PBSEL1_L
   \                     _A_PBSEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x322
   \   union <unnamed> _A_PJOUT_L
   \                     _A_PJOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x324
   \   union <unnamed> _A_PJDIR_L
   \                     _A_PJDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x32a
   \   union <unnamed> _A_PJSEL0_L
   \                     _A_PJSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x32c
   \   union <unnamed> _A_PJSEL1_L
   \                     _A_PJSEL1_L:
   \   000000                DS8 2
      3          
      4          //------------------------------------------------------------------------------
      5          //Configure Port 1
      6          // Port 1 Pins
      7          // V_DETECT_R (0x01) //
      8          // V_DETECT_L (0x02) //
      9          // IR_LED (0x04) //
     10          // V_THUMB (0x08) //
     11          // SPI_CS_LCD (0x10) // LCD Chip Select
     12          // RESET_LCD (0x20) // GPS Power Check from GPS
     13          // SPI_SIMO (0x40) // SPI mode - slave in/master out of USCI_B0
     14          // RS_LCD (0x80) // RS_LCD Command / Data selection
     15          // Slave out not used for LCD, pin used as RS_LCD
     16          // SOMI_B (0x80) // SPI mode - slave out/master in of USCI_B0

   \                                 In  segment CODE, align 2
     17          void Init_Port1(void){ 
   \                     Init_Port1:
     18           P1SEL0 = SET_0; // P1 set as I/0
   \   000000   C2430A02     MOV.B   #0x0, &0x20a
     19           P1SEL1 = SET_0; // P1 set as I/0
   \   000004   C2430C02     MOV.B   #0x0, &0x20c
     20           P1DIR = SET_0; // Set P1 direction to input
   \   000008   C2430402     MOV.B   #0x0, &0x204
     21           P1SEL0 &= ~SPI_SIMO; // 0 SIMO_B selected
   \   00000C   F2C040000A02 BIC.B   #0x40, &0x20a
     22           P1SEL1 |= SPI_SIMO; // 1 SIMO_B selected
   \   000012   F2D040000C02 BIS.B   #0x40, &0x20c
     23          // P1SEL0 &= ~SOMI_B; // 0 SOMI_B is unused on the LCD
     24          // P1SEL1 |= SOMI_B; // 1 SOMI_B is unused on the LCD
     25           P1SEL0 |= V_DETECT_R; // 1 V_DETECT_R selected
   \   000018   D2D30A02     BIS.B   #0x1, &0x20a
     26           P1SEL1 |= V_DETECT_R; // 1 V_DETECT_R selected
   \   00001C   D2D30C02     BIS.B   #0x1, &0x20c
     27           P1SEL0 |= V_DETECT_L; // 1 V_DETECT_L selected
   \   000020   E2D30A02     BIS.B   #0x2, &0x20a
     28           P1SEL1 |= V_DETECT_L; // 1 V_DETECT_L selected
   \   000024   E2D30C02     BIS.B   #0x2, &0x20c
     29           P1SEL0 |= V_THUMB; // 1 V_THUMB selected
   \   000028   F2D20A02     BIS.B   #0x8, &0x20a
     30           P1SEL1 |= V_THUMB; // 1 V_THUMB selected
   \   00002C   F2D20C02     BIS.B   #0x8, &0x20c
     31          // P1DIR &= ~SOMI_B; // SOMI_B is unused on the LCD
     32           P1DIR |= SPI_SIMO; // 1 SIMO_B set to Output
   \   000030   F2D040000402 BIS.B   #0x40, &0x204
     33           P1OUT &= ~RESET_LCD; // 0 P1 SPI_CS_LCD Port Pin set low
   \   000036   F2C020000202 BIC.B   #0x20, &0x202
     34           P1DIR |= RESET_LCD; // 1 Set RESET_LCD output direction
   \   00003C   F2D020000402 BIS.B   #0x20, &0x204
     35           P1OUT |= SPI_CS_LCD; // 1 P1 SPI_CS_LCD Port Pin set high
   \   000042   F2D010000202 BIS.B   #0x10, &0x202
     36           P1DIR |= SPI_CS_LCD; // 1 Set SPI_CS_LCD output direction
   \   000048   F2D010000402 BIS.B   #0x10, &0x204
     37           P1OUT |= RS_LCD; // 1 P1 RS_LCD Port Pin set high
   \   00004E   F2D080000202 BIS.B   #0x80, &0x202
     38           P1DIR |= RS_LCD; // 1 Set RS_LCD output direction
   \   000054   F2D080000402 BIS.B   #0x80, &0x204
     39           P1OUT &= ~IR_LED; // 0 P1 IR_LED Port Pin set low
   \   00005A   E2C20202     BIC.B   #0x4, &0x202
     40           P1REN |= SPI_SIMO; // 1 Enable pullup resistor
   \   00005E   F2D040000602 BIS.B   #0x40, &0x206
     41           P1REN |= RS_LCD; // 1 Enable pullup resistor
   \   000064   F2D080000602 BIS.B   #0x80, &0x206
     42           P1REN |= RESET_LCD; // 1 Enable pullup resistor
   \   00006A   F2D020000602 BIS.B   #0x20, &0x206
     43           P1REN |= SPI_CS_LCD; // 1 Enable pullup resistor
   \   000070   F2D010000602 BIS.B   #0x10, &0x206
     44          }
   \   000076   1001         RETA
   \   000078                REQUIRE _A_PASEL0_L
   \   000078                REQUIRE _A_PASEL1_L
   \   000078                REQUIRE _A_PADIR_L
   \   000078                REQUIRE _A_PAOUT_L
   \   000078                REQUIRE _A_PAREN_L
     45          //------------------------------------------------------------------------------
     46          
     47          //------------------------------------------------------------------------------
     48          //Configure Port 2
     49          // Port 2 Pins
     50          // USB_TXD              (0x01) // Port 2 Pin 0 offset
     51          // USB_RXD              (0x02) // Port 2 Pin 1 offset
     52          // SPI_SCK              (0x04) // Port 2 Pin 2 offset
     53          // CPU_TXD              (0x20) // Port 2 Pin 5 offset
     54          // CPU_RXD              (0x40) // Port 2 Pin 6 offset

   \                                 In  segment CODE, align 2
     55          void Init_Port2(void) { 
   \                     Init_Port2:
     56          
     57              P2SEL0 = SET_0;
   \   000000   C2430B02     MOV.B   #0x0, &0x20b
     58              P2SEL1 = SET_0;
   \   000004   C2430D02     MOV.B   #0x0, &0x20d
     59              P2DIR = SET_0;
   \   000008   C2430502     MOV.B   #0x0, &0x205
     60              P2OUT = SET_0;
   \   00000C   C2430302     MOV.B   #0x0, &0x203
     61            
     62              P2SEL0 &= ~(USB_TXD | USB_RXD | SPI_SCK | CPU_TXD | CPU_RXD); // Set specific pins as function
   \   000010   F2F098000B02 AND.B   #0x98, &0x20b
     63              P2SEL1 |= (USB_TXD | USB_RXD | SPI_SCK | CPU_TXD | CPU_RXD); // Set specific pins as function
   \   000016   F2D067000D02 BIS.B   #0x67, &0x20d
     64              P2OUT |= SPI_SCK;
   \   00001C   E2D20302     BIS.B   #0x4, &0x203
     65              P2REN |= SPI_SCK;
   \   000020   E2D20702     BIS.B   #0x4, &0x207
     66          }
   \   000024   1001         RETA
   \   000026                REQUIRE _A_PASEL0_L
   \   000026                REQUIRE _A_PASEL1_L
   \   000026                REQUIRE _A_PADIR_L
   \   000026                REQUIRE _A_PAOUT_L
   \   000026                REQUIRE _A_PAREN_L
     67          //------------------------------------------------------------------------------
     68          
     69          //------------------------------------------------------------------------------
     70          //Configure Port 3
     71          // Port 3 Pins
     72          // X                    (0x01) // Port 3 Pin 0 offset
     73          // Y                    (0x02) // Port 3 Pin 1 offset
     74          // Z                    (0x04) // Port 3 Pin 2 offset
     75          // TEST_PROBE           (0x08) // LCD BACKLIGHT
     76          // R_FORWARD            (0x10) // Port 3 Pin 4 offset
     77          // R_REVERSE            (0x20) // Port 3 Pin 5 offset
     78          // L_FORWARD            (0x40) // Port 3 Pin 6 offset
     79          // L_REVERSE            (0x80) // Port 3 Pin 7 offset

   \                                 In  segment CODE, align 2
     80          void Init_Port3(char clock_state) { //This function will initialize all pins in port 3.
   \                     Init_Port3:
     81          
     82              P3SEL0 = SET_0;
   \   000000   C2432A02     MOV.B   #0x0, &0x22a
     83              P3SEL1 = SET_0;
   \   000004   C2432C02     MOV.B   #0x0, &0x22c
     84              P3DIR = SET_0;
   \   000008   C2432402     MOV.B   #0x0, &0x224
     85              P3OUT = SET_0;
   \   00000C   C2432202     MOV.B   #0x0, &0x222
     86            
     87              P3DIR |= (R_FORWARD | L_FORWARD | TEST_PROBE | R_REVERSE | L_REVERSE); // Set specific pins as output
   \   000010   F2D0F8002402 BIS.B   #0xf8, &0x224
     88              P3DIR &= ~(X | Y | Z ); // Set specific pins as input
   \   000016   F2F0FC002402 AND.B   #0xfc, &0x224
     89              P3SEL0 &= ~(X | Y | Z | R_FORWARD | L_FORWARD | TEST_PROBE | R_REVERSE | L_REVERSE); // Set specific pins as GP I/O
   \   00001C   E2F22A02     AND.B   #0x4, &0x22a
     90              P3SEL1 &= ~(X | Y | Z | R_FORWARD | L_FORWARD | TEST_PROBE | R_REVERSE | L_REVERSE); // Set specific pins as GP I/O
   \   000020   E2F22C02     AND.B   #0x4, &0x22c
     91              P3OUT &= ~(X | Y | Z | R_FORWARD | L_FORWARD | TEST_PROBE | R_REVERSE | L_REVERSE); // Set specific pins to 0
   \   000024   E2F22202     AND.B   #0x4, &0x222
     92              
     93              
     94          }
   \   000028   1001         RETA
   \   00002A                REQUIRE _A_PBSEL0_L
   \   00002A                REQUIRE _A_PBSEL1_L
   \   00002A                REQUIRE _A_PBDIR_L
   \   00002A                REQUIRE _A_PBOUT_L
     95          //------------------------------------------------------------------------------
     96          
     97          
     98          
     99          //----------------------------------------------------------------
    100          // Configure PORT 4
    101          // Port 4 has only two pins
    102          // Port 4 Pins
    103          // SW1 (0x01) // Switch 1
    104          // SW2 (0x02) // Switch 2

   \                                 In  segment CODE, align 2
    105          void Init_Port4(void){
   \                     Init_Port4:
    106             P4SEL0 = SET_0; // P4 set as I/0
   \   000000   C2432B02     MOV.B   #0x0, &0x22b
    107             P4SEL1 = SET_0; // P4 set as I/0
   \   000004   C2432D02     MOV.B   #0x0, &0x22d
    108             P4DIR = SET_0; // Set P4 direction to input
   \   000008   C2432502     MOV.B   #0x0, &0x225
    109             P4DIR &= ~(SW1 | SW2); // Direction = input
   \   00000C   F2F0FC002502 AND.B   #0xfc, &0x225
    110             P4OUT = SET_0;
   \   000012   C2432302     MOV.B   #0x0, &0x223
    111             P4OUT |= SW1 | SW2; // Configure pullup resistor
   \   000016   F2D003002302 BIS.B   #0x3, &0x223
    112             P4REN |= SW1 | SW2; // Enable pullup resistor
   \   00001C   F2D003002702 BIS.B   #0x3, &0x227
    113             //P4IES |= SW1 | SW2; // P4.0 Hi/Lo edge interrupt
    114          }
   \   000022   1001         RETA
   \   000024                REQUIRE _A_PBSEL0_L
   \   000024                REQUIRE _A_PBSEL1_L
   \   000024                REQUIRE _A_PBDIR_L
   \   000024                REQUIRE _A_PBOUT_L
   \   000024                REQUIRE _A_PBREN_L
    115          //----------------------------------------------------------------
    116          
    117          //----------------------------------------------------------------
    118          // Configure PORT J
    119          // GPS_PWR              (0x01) // Port J Pin 0 offset
    120          // GPS_RESET            (0x02) // Port J Pin 1 offset
    121          // GPS_PWRCNTL          (0x04) // Port J Pin 2 offset
    122          // GPS_PWRCHK           (0x08) // Port J Pin 3 offset

   \                                 In  segment CODE, align 2
    123          void Init_PortJ(void) { //This function will initialize all pins in port 3.
   \                     Init_PortJ:
    124          
    125              PJSEL0 = SET_0;
   \   000000   82432A03     MOV.W   #0x0, &0x32a
    126              PJSEL1 = SET_0;
   \   000004   82432C03     MOV.W   #0x0, &0x32c
    127              PJDIR = SET_0;
   \   000008   82432403     MOV.W   #0x0, &0x324
    128              PJOUT = SET_0;
   \   00000C   82432203     MOV.W   #0x0, &0x322
    129            
    130              PJDIR |= (GPS_PWR | GPS_RESET | GPS_PWRCNTL); // Set specific pins as output
   \   000010   B2D007002403 BIS.W   #0x7, &0x324
    131              PJDIR &= ~(GPS_PWRCHK); // Set specific pins as input
   \   000016   B2C22403     BIC.W   #0x8, &0x324
    132              PJSEL0 &= ~(GPS_PWR | GPS_RESET | GPS_PWRCNTL | GPS_PWRCHK); // Set specific pins as GP I/O
   \   00001A   B2F0F0FF2A03 AND.W   #0xfff0, &0x32a
    133              PJSEL1 &= ~(GPS_PWR | GPS_RESET | GPS_PWRCNTL | GPS_PWRCHK); // Set specific pins as GP I/O
   \   000020   B2F0F0FF2C03 AND.W   #0xfff0, &0x32c
    134              PJOUT &= ~(GPS_PWR | GPS_RESET | GPS_PWRCNTL | GPS_PWRCHK); // Set specific pins to 0
   \   000026   B2F0F0FF2203 AND.W   #0xfff0, &0x322
    135          }
   \   00002C   1001         RETA
   \   00002E                REQUIRE _A_PJSEL0_L
   \   00002E                REQUIRE _A_PJSEL1_L
   \   00002E                REQUIRE _A_PJDIR_L
   \   00002E                REQUIRE _A_PJOUT_L
    136          //----------------------------------------------------------------
    137          

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Init_Port1
      4   Init_Port2
      4   Init_Port3
      4   Init_Port4
      4   Init_PortJ


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
     120  Init_Port1
      38  Init_Port2
      42  Init_Port3
      36  Init_Port4
      46  Init_PortJ
       2  _A_PADIR_L
       2  _A_PAOUT_L
       2  _A_PAREN_L
       2  _A_PASEL0_L
       2  _A_PASEL1_L
       2  _A_PBDIR_L
       2  _A_PBOUT_L
       2  _A_PBREN_L
       2  _A_PBSEL0_L
       2  _A_PBSEL1_L
       2  _A_PJDIR_L
       2  _A_PJOUT_L
       2  _A_PJSEL0_L
       2  _A_PJSEL1_L

 
 282 bytes in segment CODE
  28 bytes in segment DATA16_AN
 
 282 bytes of CODE memory
   0 bytes of DATA memory (+ 28 bytes shared)

Errors: none
Warnings: none
